{"ast":null,"code":"\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nvar AddressZero = \"0x0000000000000000000000000000000000000000\";\nvar HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\"; // NFKC (composed)             // (decomposed)\n\nvar EtherSymbol = \"\\u039E\"; // \"\\uD835\\uDF63\";\n\nvar NegativeOne = BigNumber.from(-1);\nvar Zero = BigNumber.from(0);\nvar One = BigNumber.from(1);\nvar Two = BigNumber.from(2);\nvar WeiPerEther = BigNumber.from(\"1000000000000000000\");\nvar MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nexport { AddressZero, HashZero, EtherSymbol, NegativeOne, Zero, One, Two, WeiPerEther, MaxUint256 };","map":{"version":3,"sources":["/Users/zaralaila/Desktop/sijil/node_modules/@ethersproject/constants/lib.esm/index.js"],"names":["BigNumber","AddressZero","HashZero","EtherSymbol","NegativeOne","from","Zero","One","Two","WeiPerEther","MaxUint256"],"mappings":"AAAA;;AACA,SAASA,SAAT,QAA0B,0BAA1B;AACA,IAAMC,WAAW,GAAG,4CAApB;AACA,IAAMC,QAAQ,GAAG,oEAAjB,C,CACA;;AACA,IAAMC,WAAW,GAAG,QAApB,C,CAA8B;;AAC9B,IAAMC,WAAW,GAAGJ,SAAS,CAACK,IAAV,CAAe,CAAC,CAAhB,CAApB;AACA,IAAMC,IAAI,GAAGN,SAAS,CAACK,IAAV,CAAe,CAAf,CAAb;AACA,IAAME,GAAG,GAAGP,SAAS,CAACK,IAAV,CAAe,CAAf,CAAZ;AACA,IAAMG,GAAG,GAAGR,SAAS,CAACK,IAAV,CAAe,CAAf,CAAZ;AACA,IAAMI,WAAW,GAAGT,SAAS,CAACK,IAAV,CAAe,qBAAf,CAApB;AACA,IAAMK,UAAU,GAAGV,SAAS,CAACK,IAAV,CAAe,oEAAf,CAAnB;AACA,SAASJ,WAAT,EAAsBC,QAAtB,EAAgCC,WAAhC,EAA6CC,WAA7C,EAA0DE,IAA1D,EAAgEC,GAAhE,EAAqEC,GAArE,EAA0EC,WAA1E,EAAuFC,UAAvF","sourcesContent":["\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nconst AddressZero = \"0x0000000000000000000000000000000000000000\";\nconst HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n// NFKC (composed)             // (decomposed)\nconst EtherSymbol = \"\\u039e\"; // \"\\uD835\\uDF63\";\nconst NegativeOne = BigNumber.from(-1);\nconst Zero = BigNumber.from(0);\nconst One = BigNumber.from(1);\nconst Two = BigNumber.from(2);\nconst WeiPerEther = BigNumber.from(\"1000000000000000000\");\nconst MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nexport { AddressZero, HashZero, EtherSymbol, NegativeOne, Zero, One, Two, WeiPerEther, MaxUint256 };\n"]},"metadata":{},"sourceType":"module"}